bak() {
    local file verbose

    for file in $@; do
        cp -v -r $file:A $file:A.bak;
    done
}

buptime() {
    echo "Buptime: ( •ᴗ•) days, ( •ᴗ•), hours, ( •ᴗ•) minutes, ( •ᴗ•) seconds."
}

wttr() {
    curl -s http://wttr.in/$1 | head -n-3
}

cheatsh() {
    curl -s http://cheat.sh/$1
}

qr() {
    echo
    if [ "$1" ]; then
        echo -e "$@" | curl -s -F-=\<- http://qrenco.de
    else
        curl -s -F-=\<- http://qrenco.de
    fi
    echo
}

snip() {
    import "${1:-screenshot_$(date +%F-%H%M%S).png}" ${@:2}
}

screenshot() {
    scrot "${1:-screenshot_$(date +%F-%H%M%S).png}" ${@:2}
}

swap() {
    local file1 file2 swap_file

    f1="${1:A}"
    f2="${2:A}"
    fs="swap-${RANDOM}${RANDOM}${RANDOM}${RANDOM}"
    mv -v "${f1}" "${fs}" &&
    mv -v "${f2}" "${f1}" &&
    mv -v "${fs}" "${f2}"
}

take() {
    mkdir -p $1 &&
    cd $1
}

color() {
    if [[ "$1" ]]; then
        tput setaf $1
    else
        tput sgr0
    fi
}

nfind() {
    find . -iname ${@} 2>&1 | grep -v "Permission denied"
}

git-status-nth() {
    awkstr='{gsub(/^\s*(D|M|\?\?)\s*/,"")} '

    if [ -z ${1+x} ]; then
        awkstr+="1"
    else
        for nth in $@; do
            awkstr+="NR==${nth}||"
        done
        awkstr=$awkstr[0,-3]
    fi

    git status -s | awk "$awkstr"
}

git-add-nth() {
    git add $(git-status-nth ${@})
}

git-diff-nth() {
    git diff $(git-status-nth ${@})
}

start-in-background() {
    if [[ -z ${1} ]]; then
        start-in-background urxvt
    else
        (${@} &> /dev/null &)
    fi
}
